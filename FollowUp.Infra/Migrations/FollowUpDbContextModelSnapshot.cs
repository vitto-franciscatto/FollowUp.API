// <auto-generated />
using System;
using FollowUp.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FollowUp.Infra.Migrations
{
    [DbContext(typeof(FollowUpDbContext))]
    partial class FollowUpDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FollowUp.Infra.DALs.FollowUpTag", b =>
                {
                    b.Property<int>("FollowUpId")
                        .HasColumnType("int")
                        .HasColumnName("FollowUpId");

                    b.Property<int>("TagId")
                        .HasColumnType("int")
                        .HasColumnName("TagId");

                    b.HasKey("FollowUpId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("FollowUpTag", "followUp");
                });

            modelBuilder.Entity("FollowUp.Infra.FollowUpDAL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssistanceId")
                        .HasColumnType("int")
                        .HasColumnName("AssistanceId");

                    b.Property<string>("AuthorExtension")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("AuthorExtension");

                    b.Property<int?>("AuthorId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("AuthorId");

                    b.Property<string>("ContactJob")
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ContactJob");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ContactName");

                    b.Property<string>("ContactPhoneNumber")
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("ContactPhoneNumber");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(2500)")
                        .HasColumnName("Message");

                    b.Property<DateTime>("OccuredAt")
                        .HasColumnType("datetime")
                        .HasColumnName("OccuredAt");

                    b.HasKey("Id");

                    b.ToTable("FollowUps", "followUp");
                });

            modelBuilder.Entity("FollowUp.Infra.TagDAL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Tags", "tag");
                });

            modelBuilder.Entity("FollowUp.Infra.DALs.FollowUpTag", b =>
                {
                    b.HasOne("FollowUp.Infra.FollowUpDAL", "FollowUp")
                        .WithMany("Tags")
                        .HasForeignKey("FollowUpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Tags_FollowUp");

                    b.HasOne("FollowUp.Infra.TagDAL", "Tag")
                        .WithMany("FollowUps")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_FollowUps_Tag");

                    b.Navigation("FollowUp");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("FollowUp.Infra.FollowUpDAL", b =>
                {
                    b.Navigation("Tags");
                });

            modelBuilder.Entity("FollowUp.Infra.TagDAL", b =>
                {
                    b.Navigation("FollowUps");
                });
#pragma warning restore 612, 618
        }
    }
}
