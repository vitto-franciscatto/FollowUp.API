// <auto-generated />
using System;
using FollowUp.API.Features.DataBases.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FollowUp.API.Features.DataBases.Migrations
{
    [DbContext(typeof(FollowUpDbContext))]
    [Migration("20230625043748__initial")]
    partial class _initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FollowUp.Domain.FollowUpDAL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssistanceId")
                        .HasColumnType("int")
                        .HasColumnName("AssistanceId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("From");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(2500)")
                        .HasColumnName("Message");

                    b.Property<DateTime>("OccuredAt")
                        .HasColumnType("datetime")
                        .HasColumnName("OccuredAt");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("To");

                    b.HasKey("Id");

                    b.ToTable("FollowUps", "followUp");
                });

            modelBuilder.Entity("FollowUp.Domain.TagDAL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TagDAL");
                });

            modelBuilder.Entity("FollowUpDALTagDAL", b =>
                {
                    b.Property<int>("FollowUpsId")
                        .HasColumnType("int");

                    b.Property<int>("TagsId")
                        .HasColumnType("int");

                    b.HasKey("FollowUpsId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("FollowUpDALTagDAL");
                });

            modelBuilder.Entity("FollowUpDALTagDAL", b =>
                {
                    b.HasOne("FollowUp.Domain.FollowUpDAL", null)
                        .WithMany()
                        .HasForeignKey("FollowUpsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FollowUp.Domain.TagDAL", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
